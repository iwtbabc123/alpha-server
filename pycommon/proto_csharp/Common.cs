// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Alpha.Server {

  /// <summary>Holder for reflection information generated from common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxjb21tb24ucHJvdG8SDGFscGhhLnNlcnZlciIGCgRWb2lkIqsBChRDb25u",
            "ZWN0U2VydmVyUmVxdWVzdBIQCghlbnRpdHlpZBgBIAEoCRIQCghjbGllbnRp",
            "ZBgCIAEoCRIOCgZnYXRlaWQYAyABKAkSPAoEdHlwZRgEIAEoDjIuLmFscGhh",
            "LnNlcnZlci5Db25uZWN0U2VydmVyUmVxdWVzdC5SZXF1ZXN0VHlwZSIhCgtS",
            "ZXF1ZXN0VHlwZRISCg5ORVdfQ09OTkVDVElPThAAIr8BChJDb25uZWN0U2Vy",
            "dmVyUmVwbHkSEAoIZW50aXR5aWQYASABKAkSEAoIY2xpZW50aWQYAiABKAkS",
            "DgoGZ2F0ZWlkGAMgASgJEjgKBHR5cGUYBCABKA4yKi5hbHBoYS5zZXJ2ZXIu",
            "Q29ubmVjdFNlcnZlclJlcGx5LlJlcGx5VHlwZRIQCghleHRyYW1zZxgFIAEo",
            "CSIpCglSZXBseVR5cGUSDQoJQ09OTkVDVEVEEAASDQoJRk9SQklEREVOEAEi",
            "RQoNRW50aXR5TWVzc2FnZRIQCghlbnRpdHlpZBgBIAEoCRIOCgZtZXRob2QY",
            "AiABKAkSEgoKcGFyYW1ldGVycxgDIAEoCUIDkAEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Alpha.Server.Void), global::Alpha.Server.Void.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Alpha.Server.ConnectServerRequest), global::Alpha.Server.ConnectServerRequest.Parser, new[]{ "Entityid", "Clientid", "Gateid", "Type" }, null, new[]{ typeof(global::Alpha.Server.ConnectServerRequest.Types.RequestType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Alpha.Server.ConnectServerReply), global::Alpha.Server.ConnectServerReply.Parser, new[]{ "Entityid", "Clientid", "Gateid", "Type", "Extramsg" }, null, new[]{ typeof(global::Alpha.Server.ConnectServerReply.Types.ReplyType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Alpha.Server.EntityMessage), global::Alpha.Server.EntityMessage.Parser, new[]{ "Entityid", "Method", "Parameters" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Void : pb::IMessage<Void> {
    private static readonly pb::MessageParser<Void> _parser = new pb::MessageParser<Void>(() => new Void());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Void> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Alpha.Server.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Void() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Void(Void other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Void Clone() {
      return new Void(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Void);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Void other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Void other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///Client->Server
  /// </summary>
  public sealed partial class ConnectServerRequest : pb::IMessage<ConnectServerRequest> {
    private static readonly pb::MessageParser<ConnectServerRequest> _parser = new pb::MessageParser<ConnectServerRequest>(() => new ConnectServerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectServerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Alpha.Server.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectServerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectServerRequest(ConnectServerRequest other) : this() {
      entityid_ = other.entityid_;
      clientid_ = other.clientid_;
      gateid_ = other.gateid_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectServerRequest Clone() {
      return new ConnectServerRequest(this);
    }

    /// <summary>Field number for the "entityid" field.</summary>
    public const int EntityidFieldNumber = 1;
    private string entityid_ = "";
    /// <summary>
    ///唯一识别的角色ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Entityid {
      get { return entityid_; }
      set {
        entityid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientid" field.</summary>
    public const int ClientidFieldNumber = 2;
    private string clientid_ = "";
    /// <summary>
    ///客户端ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Clientid {
      get { return clientid_; }
      set {
        clientid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gateid" field.</summary>
    public const int GateidFieldNumber = 3;
    private string gateid_ = "";
    /// <summary>
    ///gateid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gateid {
      get { return gateid_; }
      set {
        gateid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Alpha.Server.ConnectServerRequest.Types.RequestType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Alpha.Server.ConnectServerRequest.Types.RequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectServerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectServerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entityid != other.Entityid) return false;
      if (Clientid != other.Clientid) return false;
      if (Gateid != other.Gateid) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Entityid.Length != 0) hash ^= Entityid.GetHashCode();
      if (Clientid.Length != 0) hash ^= Clientid.GetHashCode();
      if (Gateid.Length != 0) hash ^= Gateid.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Entityid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Entityid);
      }
      if (Clientid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Clientid);
      }
      if (Gateid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Gateid);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Entityid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Entityid);
      }
      if (Clientid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clientid);
      }
      if (Gateid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gateid);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectServerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Entityid.Length != 0) {
        Entityid = other.Entityid;
      }
      if (other.Clientid.Length != 0) {
        Clientid = other.Clientid;
      }
      if (other.Gateid.Length != 0) {
        Gateid = other.Gateid;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Entityid = input.ReadString();
            break;
          }
          case 18: {
            Clientid = input.ReadString();
            break;
          }
          case 26: {
            Gateid = input.ReadString();
            break;
          }
          case 32: {
            type_ = (global::Alpha.Server.ConnectServerRequest.Types.RequestType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ConnectServerRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum RequestType {
        [pbr::OriginalName("NEW_CONNECTION")] NewConnection = 0,
      }

    }
    #endregion

  }

  /// <summary>
  ///Server->Client
  /// </summary>
  public sealed partial class ConnectServerReply : pb::IMessage<ConnectServerReply> {
    private static readonly pb::MessageParser<ConnectServerReply> _parser = new pb::MessageParser<ConnectServerReply>(() => new ConnectServerReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectServerReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Alpha.Server.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectServerReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectServerReply(ConnectServerReply other) : this() {
      entityid_ = other.entityid_;
      clientid_ = other.clientid_;
      gateid_ = other.gateid_;
      type_ = other.type_;
      extramsg_ = other.extramsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectServerReply Clone() {
      return new ConnectServerReply(this);
    }

    /// <summary>Field number for the "entityid" field.</summary>
    public const int EntityidFieldNumber = 1;
    private string entityid_ = "";
    /// <summary>
    ///唯一识别的角色ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Entityid {
      get { return entityid_; }
      set {
        entityid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientid" field.</summary>
    public const int ClientidFieldNumber = 2;
    private string clientid_ = "";
    /// <summary>
    ///客户端ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Clientid {
      get { return clientid_; }
      set {
        clientid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gateid" field.</summary>
    public const int GateidFieldNumber = 3;
    private string gateid_ = "";
    /// <summary>
    ///gateid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gateid {
      get { return gateid_; }
      set {
        gateid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Alpha.Server.ConnectServerReply.Types.ReplyType type_ = 0;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Alpha.Server.ConnectServerReply.Types.ReplyType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "extramsg" field.</summary>
    public const int ExtramsgFieldNumber = 5;
    private string extramsg_ = "";
    /// <summary>
    ///要给客户端的额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extramsg {
      get { return extramsg_; }
      set {
        extramsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectServerReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectServerReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entityid != other.Entityid) return false;
      if (Clientid != other.Clientid) return false;
      if (Gateid != other.Gateid) return false;
      if (Type != other.Type) return false;
      if (Extramsg != other.Extramsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Entityid.Length != 0) hash ^= Entityid.GetHashCode();
      if (Clientid.Length != 0) hash ^= Clientid.GetHashCode();
      if (Gateid.Length != 0) hash ^= Gateid.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Extramsg.Length != 0) hash ^= Extramsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Entityid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Entityid);
      }
      if (Clientid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Clientid);
      }
      if (Gateid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Gateid);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (Extramsg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Extramsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Entityid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Entityid);
      }
      if (Clientid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clientid);
      }
      if (Gateid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gateid);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Extramsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Extramsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectServerReply other) {
      if (other == null) {
        return;
      }
      if (other.Entityid.Length != 0) {
        Entityid = other.Entityid;
      }
      if (other.Clientid.Length != 0) {
        Clientid = other.Clientid;
      }
      if (other.Gateid.Length != 0) {
        Gateid = other.Gateid;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Extramsg.Length != 0) {
        Extramsg = other.Extramsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Entityid = input.ReadString();
            break;
          }
          case 18: {
            Clientid = input.ReadString();
            break;
          }
          case 26: {
            Gateid = input.ReadString();
            break;
          }
          case 32: {
            type_ = (global::Alpha.Server.ConnectServerReply.Types.ReplyType) input.ReadEnum();
            break;
          }
          case 42: {
            Extramsg = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ConnectServerReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ReplyType {
        [pbr::OriginalName("CONNECTED")] Connected = 0,
        [pbr::OriginalName("FORBIDDEN")] Forbidden = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Entity的RPC调用
  /// </summary>
  public sealed partial class EntityMessage : pb::IMessage<EntityMessage> {
    private static readonly pb::MessageParser<EntityMessage> _parser = new pb::MessageParser<EntityMessage>(() => new EntityMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Alpha.Server.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityMessage(EntityMessage other) : this() {
      entityid_ = other.entityid_;
      method_ = other.method_;
      parameters_ = other.parameters_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityMessage Clone() {
      return new EntityMessage(this);
    }

    /// <summary>Field number for the "entityid" field.</summary>
    public const int EntityidFieldNumber = 1;
    private string entityid_ = "";
    /// <summary>
    ///唯一识别的角色ID	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Entityid {
      get { return entityid_; }
      set {
        entityid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private string method_ = "";
    /// <summary>
    ///Entity的方法名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 3;
    private string parameters_ = "";
    /// <summary>
    /// RPC调用的参数, 不强制如何序列化，可以用BSON, protobuf,或者其他
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parameters {
      get { return parameters_; }
      set {
        parameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entityid != other.Entityid) return false;
      if (Method != other.Method) return false;
      if (Parameters != other.Parameters) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Entityid.Length != 0) hash ^= Entityid.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (Parameters.Length != 0) hash ^= Parameters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Entityid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Entityid);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Method);
      }
      if (Parameters.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Parameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Entityid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Entityid);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (Parameters.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parameters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityMessage other) {
      if (other == null) {
        return;
      }
      if (other.Entityid.Length != 0) {
        Entityid = other.Entityid;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.Parameters.Length != 0) {
        Parameters = other.Parameters;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Entityid = input.ReadString();
            break;
          }
          case 18: {
            Method = input.ReadString();
            break;
          }
          case 26: {
            Parameters = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
