# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: client_server.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import service as _service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='client_server.proto',
  package='alpha.server',
  syntax='proto3',
  serialized_pb=_b('\n\x13\x63lient_server.proto\x12\x0c\x61lpha.server\x1a\x0c\x63ommon.proto2\x9d\x01\n\x0eIServerService\x12H\n\x0e\x63onnect_server\x12\".alpha.server.ConnectServerRequest\x1a\x12.alpha.server.Void\x12\x41\n\x0e\x65ntity_message\x12\x1b.alpha.server.EntityMessage\x1a\x12.alpha.server.Void2\x9a\x01\n\x0eIClientService\x12\x45\n\rconnect_reply\x12 .alpha.server.ConnectServerReply\x1a\x12.alpha.server.Void\x12\x41\n\x0e\x65ntity_message\x12\x1b.alpha.server.EntityMessage\x1a\x12.alpha.server.VoidB\x03\x90\x01\x01\x62\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\220\001\001'))

_ISERVERSERVICE = _descriptor.ServiceDescriptor(
  name='IServerService',
  full_name='alpha.server.IServerService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=52,
  serialized_end=209,
  methods=[
  _descriptor.MethodDescriptor(
    name='connect_server',
    full_name='alpha.server.IServerService.connect_server',
    index=0,
    containing_service=None,
    input_type=common__pb2._CONNECTSERVERREQUEST,
    output_type=common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='entity_message',
    full_name='alpha.server.IServerService.entity_message',
    index=1,
    containing_service=None,
    input_type=common__pb2._ENTITYMESSAGE,
    output_type=common__pb2._VOID,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ISERVERSERVICE)

DESCRIPTOR.services_by_name['IServerService'] = _ISERVERSERVICE


_ICLIENTSERVICE = _descriptor.ServiceDescriptor(
  name='IClientService',
  full_name='alpha.server.IClientService',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=212,
  serialized_end=366,
  methods=[
  _descriptor.MethodDescriptor(
    name='connect_reply',
    full_name='alpha.server.IClientService.connect_reply',
    index=0,
    containing_service=None,
    input_type=common__pb2._CONNECTSERVERREPLY,
    output_type=common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='entity_message',
    full_name='alpha.server.IClientService.entity_message',
    index=1,
    containing_service=None,
    input_type=common__pb2._ENTITYMESSAGE,
    output_type=common__pb2._VOID,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ICLIENTSERVICE)

DESCRIPTOR.services_by_name['IClientService'] = _ICLIENTSERVICE

IServerService = service_reflection.GeneratedServiceType('IServerService', (_service.Service,), dict(
  DESCRIPTOR = _ISERVERSERVICE,
  __module__ = 'client_server_pb2'
  ))

IServerService_Stub = service_reflection.GeneratedServiceStubType('IServerService_Stub', (IServerService,), dict(
  DESCRIPTOR = _ISERVERSERVICE,
  __module__ = 'client_server_pb2'
  ))


IClientService = service_reflection.GeneratedServiceType('IClientService', (_service.Service,), dict(
  DESCRIPTOR = _ICLIENTSERVICE,
  __module__ = 'client_server_pb2'
  ))

IClientService_Stub = service_reflection.GeneratedServiceStubType('IClientService_Stub', (IClientService,), dict(
  DESCRIPTOR = _ICLIENTSERVICE,
  __module__ = 'client_server_pb2'
  ))


# @@protoc_insertion_point(module_scope)
